To connect to a QL335-P Power Supply using Qcodes, you can use the following Python script:

```python
from qcodes.instrument.visa import VisaInstrument

class QL335P(VisaInstrument):
    """
    This is the QCoDeS driver for the Aim TTi QL335-P power supply.
    """

    def __init__(self, name: str, address: str, **kwargs: Any) -> None:
        """
        Args:
            name: Name to use internally in QCoDeS.
            address: VISA resource address
        """
        super().__init__(name, address, terminator="\n", **kwargs)

        channels = ChannelList(self, "Channels", AimTTiChannel, snapshotable=False)

        _model = self.get_idn()["model"]

        if (_model not in self._numOutputChannels.keys()) or (_model is None):
            raise NotKnownModel("Unknown model, connection cannot be " "established.")

        self.numOfChannels = self._numOutputChannels[_model]
        for i in range(1, self.numOfChannels + 1):
            channel = AimTTiChannel(self, f"ch{i}", i)
            channels.append(channel)
            self.add_submodule(f"ch{i}", channel)

        self.add_submodule("channels", channels.to_channel_tuple())
        self.connect_message()
```

This script defines a `QL335P` class that inherits from `VisaInstrument` provided by Qcodes. It initializes the instrument by connecting to the specified VISA resource address. It also creates channels for the power supply using the `AimTTiChannel` class.

To use this script, you need to have Qcodes installed and import the necessary modules. Then, you can create an instance of the `QL335P` class by providing the name and address of the power supply:

```python
power_supply = QL335P(name='power_supply', address='YOUR_ADDRESS')
```

Replace `'YOUR_ADDRESS'` with the actual VISA resource address of your QL335-P Power Supply.