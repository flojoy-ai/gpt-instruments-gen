Here is a Python script that uses Qcodes to connect to a Rigol DS1074Z Oscilloscope:

```python
from qcodes.instrument.visa import VisaInstrument
from qcodes.instrument.channel import InstrumentChannel
from qcodes.instrument.parameter import ParameterWithSetpoints
from qcodes.instrument.parameter import Parameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentChannel
from qcodes.instrument.parameter import VisaInstrument
from qcodes.instrument.parameter import ParameterWithSetpoints
from qcodes.instrument.parameter import Parameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument.parameter import ChannelList
from qcodes.instrument.parameter import InstrumentRefParameter
from qcodes.instrument.parameter import MultiParameter
from qcodes.instrument.parameter import ArrayParameter
from qcodes.instrument.parameter import ManualParameter
from qcodes.instrument.parameter import DelegateParameter
from qcodes.instrument.parameter import combine
from qcodes.instrument.parameter import Command
from qcodes.instrument.parameter import StandardParameter
from qcodes.instrument.parameter import InstrumentParameter
from qcodes.instrument import ChannelList, InstrumentChannel, VisaInstrument
from qcodes.parameters import ParameterWithSetpoints
from qcodes.validators import Arrays, Enum, Numbers
import numpy as np

class RigolDS1074ZChannel(InstrumentChannel):
    def __init__(self, parent: "RigolDS1074Z", name: str, channel: int):
        super().__init__(parent, name)
        self.channel = channel

        self.add_parameter(
            "vertical_scale",
            get_cmd=f":CHANnel{channel}:SCALe?",
            set_cmd=":CHANnel{}:SCALe {}".format(channel, "{}"),
            get_parser=float,
        )

        self.add_parameter(
            "trace",
            get_cmd=self._get_full_trace,
            vals=Arrays(shape=(self.parent.waveform_npoints,)),
            setpoints=(self.parent.time_axis,),
            unit="V",
            parameter_class=ParameterWithSetpoints,
            snapshot_value=False,
        )

    def _get_full_trace(self) -> np.ndarray:
        y_ori = self.root_instrument.waveform_yorigin()
        y_increm = self.root_instrument.waveform_yincrem()
        y_ref = self.root_instrument.waveform_yref()
        y_raw = self._get_raw_trace()
        y_raw_shifted = y_raw - y_ori - y_ref
        full_data = np.multiply(y_raw_shifted, y_increm)
        return full_data

    def _get_raw_trace(self) -> np.ndarray:
        self.root_instrument.write(":WAVeform:FORMat WORD")
        self.root_instrument.data_source(f"ch{self.channel}")
        raw_trace_val = self.root_instrument.visa_handle.query_binary_values(
            "WAV:DATA?", datatype="h", is_big_endian=False, expect_termination=False
        )
        return np.array(raw_trace_val)


class RigolDS1074Z(VisaInstrument):
    def __init__(
        self,
        name: str,
        address: str,
        terminator: str = "\n",
        timeout: float = 5,
        **kwargs: Any,
    ):
        super().__init__(
            name, address, terminator=terminator, timeout=timeout, **kwargs
        )

        self.add_parameter(
            "waveform_xorigin", get_cmd="WAVeform:XORigin?", unit="s", get_parser=float
        )

        self.add_parameter(
            "waveform_xincrem",
            get_cmd=":WAVeform:XINCrement?",
            unit="s",
            get_parser=float,
        )

        self.add_parameter(
            "waveform_npoints",
            get_cmd="WAV:POIN?",
            set_cmd="WAV:POIN {}",
            unit="s",
            get_parser=int,
        )

        self.add_parameter(
            "waveform_yorigin", get_cmd="WAVeform:YORigin?", unit="V", get_parser=float
        )

        self.add_parameter(
            "waveform_yincrem",
            get_cmd=":WAVeform:YINCrement?",
            unit="V",
            get_parser=float,
        )

        self.add_parameter(
            "waveform_yref", get_cmd=":WAVeform:YREFerence?", unit="V", get_parser=float
        )

        self.add_parameter(
            "trigger_mode",
            get_cmd=":TRIGger:MODE?",
            set_cmd=":TRIGger:MODE {}",
            unit="V",
            vals=Enum("edge", "pulse", "video", "pattern"),
            get_parser=str,
        )

        self.add_parameter(
            "trigger_level",
            unit="V",
            get_cmd=self._get_trigger_level,
            set_cmd=self._set_trigger_level,
            vals=Numbers(),
        )

        self.add_parameter(
            "trigger_edge_source",
            label="Source channel for the edge trigger",
            get_cmd=":TRIGger:EDGE:SOURce?",
            set_cmd=":TRIGger:EDGE:SOURce {}",
            val_mapping={
                "ch1": "CHAN1",
                "ch2": "CHAN2",
                "ch3": "CHAN3",
                "ch4": "CHAN4",
            },
        )

        self.add_parameter(
            "trigger_edge_slope",
            label="Slope of the edge trigger",
            get_cmd=":TRIGger:EDGE:SLOPe?",
            set_cmd=":TRIGger:EDGE:SLOPe {}",
            vals=Enum("positive", "negative", "neither"),
        )

        self.add_parameter(
            "data_source",
            label="Waveform Data source",
            get_cmd=":WAVeform:SOURce?",
            set_cmd=":WAVeform:SOURce {}",
            val_mapping={
                "ch1": "CHAN1",
                "ch2": "CHAN2",
                "ch3": "CHAN3",
                "ch4": "CHAN4",
            },
        )

        self.add_parameter(
            "time_axis",
            unit="s",
            label="Time",
            set_cmd=False,
            get_cmd=self._get_time_axis,
            vals=Arrays(shape=(self.waveform_npoints,)),
            snapshot_value=False,
        )

        channels = ChannelList(
            self, "channels", RigolDS1074ZChannel, snapshotable=False
        )

        for channel_number in range(1, 5):
            channel = RigolDS1074ZChannel(self, f"ch{channel_number}", channel_number)
            channels.append(channel)

        self.add_submodule("channels", channels.to_channel_tuple())

        self.connect_message()

    def _get_time_axis(self) -> np.ndarray:
        xorigin = self.waveform_xorigin()
        xincrem = self.waveform_xincrem()
        npts = self.waveform_npoints()
        xdata = np.linspace(xorigin, npts * xincrem + xorigin, npts)
        return xdata

    def _get_trigger_level(self) -> str:
        trigger_level = self.root_instrument.ask(
            f":TRIGger:{self.trigger_mode()}:LEVel?"
        )
        return trigger_level

    def _set_trigger_level(self, value: str) -> None:
        self.root_instrument.write(f":TRIGger:{self.trigger_mode()}:LEVel {value}")


# Connect to the Rigol DS1074Z Oscilloscope
rigol = RigolDS1074Z("rigol", "TCPIP0::192.168.1.1::INSTR")

# Access the channels
ch1 = rigol.channels.ch1
ch2 = rigol.channels.ch2
ch3 = rigol.channels.ch3
ch4 = rigol.channels.ch4

# Set the vertical scale of channel 1 to 0.1 V
ch1.vertical_scale(0.1)

# Get the trace data from channel 2
trace_data = ch2.trace()

# Print the trace data
print(trace_data)
```

This script connects to a Rigol DS1074Z Oscilloscope using the `RigolDS1074Z` class provided in the code. It then accesses the individual channels (`ch1`, `ch2`, `ch3`, `ch4`) and performs operations such as setting the vertical scale and getting the trace data. Finally, it prints the trace data obtained from channel 2.