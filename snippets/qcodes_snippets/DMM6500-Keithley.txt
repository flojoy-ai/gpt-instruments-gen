Here is a Python script that uses Qcodes to connect to a Keithley DMM6500 Multimeter:

```python
from qcodes.instrument.visa import VisaInstrument
from qcodes.instrument.parameter import Parameter
from qcodes.utils.validators import Numbers


class KeithleyDMM6500(VisaInstrument):
    def __init__(self, name, address, **kwargs):
        super().__init__(name, address, terminator="\n", **kwargs)

        self.add_parameter(
            "voltage",
            get_cmd="MEAS:VOLT:DC?",
            get_parser=float,
            unit="V",
            vals=Numbers(),
        )

        self.add_parameter(
            "current",
            get_cmd="MEAS:CURR:DC?",
            get_parser=float,
            unit="A",
            vals=Numbers(),
        )

        self.add_parameter(
            "resistance",
            get_cmd="MEAS:RES?",
            get_parser=float,
            unit="Ohm",
            vals=Numbers(),
        )

        self.connect_message()

    def reset(self):
        self.write("*RST")


# Connect to the Keithley DMM6500
dmm = KeithleyDMM6500("dmm", "TCPIP0::192.168.1.1::INSTR")

# Reset the device
dmm.reset()

# Read voltage
voltage = dmm.voltage()
print("Voltage:", voltage)

# Read current
current = dmm.current()
print("Current:", current)

# Read resistance
resistance = dmm.resistance()
print("Resistance:", resistance)

# Close the connection
dmm.close()
```

This script creates a `KeithleyDMM6500` class that inherits from `VisaInstrument` provided by Qcodes. It adds three parameters: `voltage`, `current`, and `resistance`, which are used to read the corresponding measurements from the multimeter.

The `reset` method is used to reset the device.

To use the script, you need to provide the appropriate address for your Keithley DMM6500 in the `KeithleyDMM6500` instantiation. Then, you can call the parameter methods (`voltage()`, `current()`, `resistance()`) to read the measurements from the multimeter.

Note: Make sure you have Qcodes and the necessary dependencies installed before running this script.