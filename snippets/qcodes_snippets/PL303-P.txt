Here is a Python script that uses Qcodes to connect to a PL303-P Power Supply:

```python
from qcodes.instrument.visa import VisaInstrument
from qcodes.instrument_drivers.aimtti.AimTTi import AimTTi

# Connect to the power supply
power_supply = AimTTi("power_supply", "TCPIP0::192.168.1.1::inst0::INSTR")

# Print the instrument identification
print(power_supply.get_idn())

# Set the voltage and current values
power_supply.ch1.volt(5)
power_supply.ch1.curr(0.5)

# Enable the output
power_supply.ch1.output(1)

# Disconnect from the power supply
power_supply.close()
```

This script first imports the necessary modules and classes from Qcodes. Then, it creates an instance of the `AimTTi` class, which represents the PL303-P Power Supply. The constructor takes two arguments: the name of the instrument (`power_supply`) and the VISA resource address (`TCPIP0::192.168.1.1::inst0::INSTR` in this example).

The script then prints the instrument identification using the `get_idn()` method.

Next, it sets the voltage and current values of channel 1 using the `volt()` and `curr()` methods, respectively.

After that, it enables the output of channel 1 by setting the `output` parameter to 1.

Finally, the script closes the connection to the power supply using the `close()` method.

Note: Make sure to replace the VISA resource address (`TCPIP0::192.168.1.1::inst0::INSTR`) with the actual address of your power supply.