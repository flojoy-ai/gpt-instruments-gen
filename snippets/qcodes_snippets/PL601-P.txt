To connect to a PL601-P Power Supply using Qcodes, you can use the following Python script:

```python
from qcodes.instrument.visa import VisaInstrument
from qcodes.instrument.channel import ChannelList

class AimTTiChannel(VisaInstrument):
    def __init__(self, name, address, **kwargs):
        super().__init__(name, address, terminator="\n", **kwargs)
        self.add_parameter(
            "volt",
            get_cmd="V?",
            get_parser=float,
            set_cmd="V {}",
            label="Voltage",
            unit="V",
        )
        self.add_parameter(
            "curr",
            get_cmd="I?",
            get_parser=float,
            set_cmd="I {}",
            label="Current",
            unit="A",
        )

class AimTTiPowerSupply(VisaInstrument):
    def __init__(self, name, address, **kwargs):
        super().__init__(name, address, terminator="\n", **kwargs)
        channels = ChannelList(self, "Channels", AimTTiChannel, snapshotable=False)
        channels.append(AimTTiChannel(self, "ch1", address))
        self.add_submodule("channels", channels.to_channel_tuple())
        self.connect_message()

# Connect to the power supply
power_supply = AimTTiPowerSupply("power_supply", "TCPIP::192.168.1.1::INSTR")

# Get the voltage and current values
voltage = power_supply.channels.ch1.volt()
current = power_supply.channels.ch1.curr()

# Set the voltage and current values
power_supply.channels.ch1.volt(5)
power_supply.channels.ch1.curr(1)

# Close the connection
power_supply.close()
```

This script defines two classes: `AimTTiChannel` and `AimTTiPowerSupply`. The `AimTTiChannel` class represents a single channel of the power supply and defines the `volt` and `curr` parameters for voltage and current control.

The `AimTTiPowerSupply` class represents the power supply itself and contains a `ChannelList` of `AimTTiChannel` instances. It also defines the connection to the power supply using the specified address.

To use the script, you need to replace `"TCPIP::192.168.1.1::INSTR"` with the actual IP address of your PL601-P Power Supply. After connecting, you can get and set the voltage and current values using the `volt` and `curr` parameters of the channel.

Finally, don't forget to close the connection using `power_supply.close()` to release any resources associated with the power supply.