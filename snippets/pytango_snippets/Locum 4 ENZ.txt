Sure! Here's an example of a Python script that uses Pytango to connect to a Locum 4 ENZ device:

```python
import PyTango

# Define the device name and the Tango database host
device_name = "sys/locum4enz/1"
tango_host = "localhost"

# Create a Tango device proxy
device_proxy = PyTango.DeviceProxy(device_name, tango_host)

# Check if the device is online
if device_proxy.ping():
    print("Device is online")
else:
    print("Device is offline")

# Read a scalar attribute from the device
attribute_name = "AttributeScalar"
attribute_value = device_proxy.read_attribute(attribute_name).value
print(f"{attribute_name}: {attribute_value}")

# Write a scalar attribute to the device
new_attribute_value = 42
device_proxy.write_attribute(attribute_name, new_attribute_value)

# Read the attribute again to verify the write
attribute_value = device_proxy.read_attribute(attribute_name).value
print(f"{attribute_name}: {attribute_value}")
```

In this script, we first import the `PyTango` module. Then, we define the `device_name` and `tango_host` variables to specify the device name and the Tango database host, respectively.

Next, we create a `DeviceProxy` object by passing the `device_name` and `tango_host` to the `DeviceProxy` constructor. This object allows us to interact with the device.

We can use the `ping()` method of the `DeviceProxy` object to check if the device is online.

To read a scalar attribute from the device, we specify the attribute name and use the `read_attribute()` method of the `DeviceProxy` object. The returned value is accessed using the `value` attribute of the `DeviceAttribute` object.

To write a scalar attribute to the device, we specify the attribute name and the new value, and use the `write_attribute()` method of the `DeviceProxy` object.

Finally, we read the attribute again to verify the write operation.

Note: Make sure to replace the `device_name` and `tango_host` variables with the actual device name and Tango database host in your setup.