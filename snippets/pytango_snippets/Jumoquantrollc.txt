Sure! Here's an example of a Python script that uses PyTango to connect to a Jumoquantrollc Temperature Controller:

```python
import PyTango

# Define the Tango device name for the Jumoquantrollc Temperature Controller
device_name = "tango://localhost:10000/sys/tg_test/1"

# Create a Tango device proxy for the Jumoquantrollc Temperature Controller
device_proxy = PyTango.DeviceProxy(device_name)

# Read the current temperature from the device
temperature = device_proxy.read_attribute("Temperature").value

# Print the temperature
print("Current temperature: {} Â°C".format(temperature))
```

In this script, we first import the `PyTango` module. Then, we define the Tango device name for the Jumoquantrollc Temperature Controller. This device name is in the format `tango://<host>:<port>/<device>`, where `<host>` is the hostname or IP address of the Tango server, `<port>` is the port number of the Tango server, and `<device>` is the device name.

Next, we create a Tango device proxy using the `PyTango.DeviceProxy()` function and pass in the device name. This proxy allows us to interact with the Jumoquantrollc Temperature Controller.

We then use the `read_attribute()` method of the device proxy to read the current temperature attribute of the device. The attribute name is specified as a string, in this case, "Temperature". The `read_attribute()` method returns a `PyTango.AttributeValue` object, from which we extract the value using the `value` attribute.

Finally, we print the current temperature using the `print()` function.

Note: Make sure to replace the `device_name` variable with the actual Tango device name of your Jumoquantrollc Temperature Controller.