```python
import time
import numpy as np
import PyTango as pt

# Measurement parameters, these are hardcoded since this is just a demo
binning = 0  # you can change this
offset = 0
tacq = 1000  # Measurement time in millisec, you can change this
syncDivider = 1  # you can change this
CFDZeroCross0 = 10  # you can change this (in mV)
CFDLevel0 = 100  # you can change this (in mV)
CFDZeroCross1 = 10  # you can change this (in mV)
CFDLevel1 = 50  # you can change this (in mV)

# Variables to store information read from device
counts = np.zeros(65536, dtype=np.uint32)
dev = None

# Connect to the PicoHarp device
dev_name = "pico/0"  # Replace with the actual device name
dev = pt.DeviceProxy(dev_name)

# Initialize the device
dev.Initialize(0)

# Set measurement parameters
dev.SetSyncDiv(syncDivider)
dev.SetInputCFD(0, CFDLevel0, CFDZeroCross0)
dev.SetInputCFD(1, CFDLevel1, CFDZeroCross1)
dev.SetBinning(binning)
dev.SetOffset(offset)

# Get count rates
countRate0 = dev.GetCountRate(0)
countRate1 = dev.GetCountRate(1)
print(f"Count Rate 0: {countRate0} counts/s")
print(f"Count Rate 1: {countRate1} counts/s")

# Set stop overflow
dev.SetStopOverflow(1, 65535)

# Start measurement
dev.StartMeas(tacq)

# Wait for measurement to complete
time.sleep(tacq / 1000)

# Stop measurement
dev.StopMeas()

# Get histogram data
counts = dev.GetHistogram(0)

# Print total count
total_count = np.sum(counts)
print(f"Total Count: {total_count}")

# Close the device
dev.CloseDevice()
```