Sure! Here's an example Python script that uses Qcodes Community to connect to an IVVI IV Converter:

```python
from qcodes.instrument_drivers.ivvi import IVVI

# Create an instance of the IVVI instrument
ivvi = IVVI('ivvi', 'ASRL1::INSTR')

# Connect to the instrument
ivvi.connect()

# Set the voltage of DAC 1 to 1000 mV
ivvi.dac1(1000)

# Get the voltage of DAC 1
voltage = ivvi.dac1()

# Print the voltage
print(f"Voltage of DAC 1: {voltage} mV")

# Disconnect from the instrument
ivvi.disconnect()
```

In this example, we first import the `IVVI` class from the `qcodes.instrument_drivers.ivvi` module. We then create an instance of the `IVVI` instrument, passing the name of the instrument and the address (ASRL address in this case) as arguments.

Next, we connect to the instrument using the `connect()` method. We can then use the instrument's parameters and functions to interact with the IVVI IV Converter. In this example, we set the voltage of DAC 1 to 1000 mV using the `dac1()` parameter and get the voltage of DAC 1 using the same parameter.

Finally, we disconnect from the instrument using the `disconnect()` method.

Note: Make sure to replace `'ASRL1::INSTR'` with the actual address of your IVVI IV Converter.