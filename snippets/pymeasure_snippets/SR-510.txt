Sure! Here's a Python script that uses Pymeasure to connect to a SR 510 Lock-in Amplifier:

```python
from pymeasure.adapters import VISAAdapter
from pymeasure.instruments.sr510 import SR510

# Create a VISA adapter for communication
adapter = VISAAdapter("GPIB0::1::INSTR")

# Connect to the SR510 Lock-in Amplifier
lockin = SR510(adapter)

# Set the lock-in amplifier properties
lockin.phase = 90
lockin.time_constant = 1e-3
lockin.sensitivity = 10e-9

# Read the lock-in amplifier measurements
frequency = lockin.frequency
status = lockin.status
output = lockin.output

# Print the measurements
print("Frequency: {} Hz".format(frequency))
print("Status: {}".format(status))
print("Output: {} V".format(output))

# Disconnect from the lock-in amplifier
lockin.disconnect()
```

This script first creates a VISA adapter using the `VISAAdapter` class from Pymeasure. The adapter is initialized with the VISA address of the lock-in amplifier.

Then, an instance of the `SR510` class is created, passing the adapter as an argument. This represents the lock-in amplifier instrument.

The script sets the lock-in amplifier properties by assigning values to the `phase`, `time_constant`, and `sensitivity` attributes of the `SR510` instance.

Next, the script reads the lock-in amplifier measurements by accessing the `frequency`, `status`, and `output` attributes of the `SR510` instance.

Finally, the script prints the measurements and disconnects from the lock-in amplifier by calling the `disconnect()` method of the `SR510` instance.

Note: Make sure to replace the VISA address `"GPIB0::1::INSTR"` with the actual address of your lock-in amplifier.