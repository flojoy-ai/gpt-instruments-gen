Here's an example Python script that uses Instrumentkit to connect to a SC10 optical beam shutter controller:

```python
from instrumentkit import SC10

# Connect to the SC10
sc10 = SC10("COM1")

# Get the name and version number of the device
name = sc10.name
print(f"Device name: {name}")

# Get the shutter enable status
enable = sc10.enable
print(f"Shutter enable status: {enable}")

# Set the shutter enable status
sc10.enable = True

# Get the output mode of the SC10
mode = sc10.mode
print(f"Output mode: {mode}")

# Set the output mode to manual
sc10.mode = SC10.Mode.manual

# Get the trigger source
trigger = sc10.trigger
print(f"Trigger source: {trigger}")

# Set the trigger source to external
sc10.trigger = 1

# Get the out trigger source
out_trigger = sc10.out_trigger
print(f"Out trigger source: {out_trigger}")

# Set the out trigger source to follow controller output
sc10.out_trigger = 1

# Get the open time of the shutter
open_time = sc10.open_time
print(f"Open time: {open_time}")

# Set the open time to 100 ms
sc10.open_time = 100

# Get the closed status of the shutter
closed = sc10.closed
print(f"Shutter closed status: {closed}")

# Get the interlock tripped status
interlock = sc10.interlock
print(f"Interlock tripped status: {interlock}")

# Restore the instrument to factory settings
sc10.default()

# Save the parameters in static memory
sc10.save()

# Save the output trigger mode and baud rate settings in memory
sc10.save_mode()

# Load the settings from memory
sc10.restore()
```

Note: Replace `"COM1"` with the appropriate serial port or connection information for your SC10 device.