Sure! Here's an example Python script that uses Instrumentkit to connect to a CTC100 Temperature Controller:

```python
from instrumentkit import Instrument, ConnectionType

# Define the CTC100 Temperature Controller class
class CTC100(Instrument):
    def __init__(self, connection_type, address):
        super().__init__(connection_type, address)

    # Define specific commands for the CTC100 Temperature Controller
    def get_temperature(self, channel):
        return self.query(f"{channel}.value")

    def set_temperature(self, channel, temperature):
        self.sendcmd(f"{channel}.value = {temperature}")

# Create an instance of the CTC100 Temperature Controller
ctc100 = CTC100(ConnectionType.TCP_IP, "192.168.1.100")

# Connect to the CTC100 Temperature Controller
ctc100.connect()

# Get the temperature from channel 1
temperature = ctc100.get_temperature("chan1")
print(f"Temperature: {temperature}")

# Set the temperature of channel 2 to 25 degrees Celsius
ctc100.set_temperature("chan2", 25)

# Disconnect from the CTC100 Temperature Controller
ctc100.disconnect()
```

Note: This code assumes that you have Instrumentkit installed and that you have the necessary dependencies (such as numpy) installed as well.